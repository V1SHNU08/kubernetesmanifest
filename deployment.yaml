---
apiVersion: apps/v1
kind: "Deployment"
metadata:
  name: watani-content
  labels:
    app: watani-content
  namespace: watani-preprod
spec:
  replicas: 2
  revisionHistoryLimit: 4
  selector:
    matchLabels:
      app: watani-content
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: watani-content

    spec:  
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 3000
      restartPolicy: Always
      terminationGracePeriodSeconds: 20
      containers:
      - name: watani-content
        image: 163048243785.dkr.ecr.me-central-1.amazonaws.com/watani-preprod:watani-preprod-content-30
        imagePullPolicy: Always
        ports:
        - containerPort: 3002
          name: watani-content
        - containerPort: 50052
          name: content-grpc
        readinessProbe:
          tcpSocket:
            port: 3002
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          tcpSocket:
            port: 3002
          initialDelaySeconds: 15
          periodSeconds: 20
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "sleep 40"]
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          runAsUser: 1000
          capabilities:
            drop: ["SETUID", "SETGID"]
        resources:
          limits:
            cpu: "512m"
            memory: "512Mi"
          requests:
            cpu: "256m"
            memory: "256Mi"
        volumeMounts:
            - name: env
              mountPath: /usr/src/app/.env
              subPath: .env
              readOnly: true
      volumes:
        - name: env
          secret:
            secretName: watani-content-svc-secret

